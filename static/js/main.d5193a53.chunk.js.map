{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","services/preparedData.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","moviesList","_ref$onAdd","onAdd","_useState","useState","_useState2","_slicedToArray","searchTitle","setSearchTitle","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","setMovie","_useState7","_useState8","isLoading","setIsloading","_Fragment","onSubmit","event","query","preventDefault","toLowerCase","trim","fetch","concat","then","res","json","catch","Response","Error","data","Poster","Title","Plot","imdbID","getPreparedData","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","find","m","App","setMovies","newMovie","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5193a53.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getPreparedData } from '../../services/preparedData';\n\ntype Props = {\n  moviesList: Movie[],\n  onAdd: (m: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  moviesList,\n  onAdd = () => { },\n}) => {\n  const [searchTitle, setSearchTitle] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsloading] = useState(false);\n\n  const handleFindMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsloading(true);\n\n    getMovie(searchTitle.toLowerCase().trim())\n      .then((data) => {\n        if ('Error' in data) {\n          setErrorMessage('Can\\'t find a movie with such a title');\n        } else {\n          setMovie(getPreparedData(data));\n          setErrorMessage('');\n        }\n      })\n      .finally(() => setIsloading(false));\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      if (moviesList.find(m => m.imdbId === movie.imdbId)) {\n        setSearchTitle('');\n        setMovie(null);\n\n        return;\n      }\n\n      onAdd(movie);\n      setSearchTitle('');\n      setMovie(null);\n    }\n  };\n\n  const handleSearchValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTitle(event.target.value);\n    setErrorMessage('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': errorMessage },\n              )}\n              value={searchTitle}\n              onChange={handleSearchValue}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!searchTitle}\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {!!movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=227753e2';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nexport function getPreparedData(data: MovieData): Movie {\n  const {\n    Poster,\n    Title,\n    Plot,\n    imdbID,\n  } = data;\n\n  // eslint-disable-next-line max-len\n  const defaultUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A' ? defaultUrl : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAdd = (newMovie: Movie) => {\n    if (movies.find(m => m.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          moviesList={movies}\n          onAdd={onAdd}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}